{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cheap i3.metal instance at spot pricing",
  "Mappings" : {
      "RegionMap" : {
          "us-east-1" : {
              "AMI" : "ami-02eac2c0129f6376b"
          },
          "us-east-2" : {
              "AMI" : "ami-0f2b4fc905b0bd1f1"
          },
          "us-west-2" : {
              "AMI" : "ami-01ed306a12b7d1c96"
          },
          "us-west-1" : {
              "AMI" : "ami-074e2d6769f445be5"
          }
      }
  },
  "Parameters": {
    "MaxSpotPrice" : {
      "Description" : "Maximum spot price to bid in USD. Instance is terminated if current price exceeds max; set to 0 to launch on-demand",
      "Default" : "2.50",
      "Type" : "Number"
    },
    "CurSpotPrice" : {
      "Description" : "Current spot price when stack was created",
      "Type" : "Number"
    },
    "InstanceType" : {
      "Description" : "EC2 bare metal instance type (i3.metal, etc). m5d.metal has lower spot price, but CentOS only supports i3.metal",
      "Type" : "String",
      "Default" : "i3.metal",
      "AllowedValues" : ["i3.metal","m5d.metal"],
      "ConstraintDescription" : "Must be a valid EC2 bare metal type."
    },
    "AvailabilityZones" : {
      "Description" : "EC2 AZs to choose from, different AZs may have different spot prices and availability",
      "Type" : "String",
      "Default" : "us-east-1a,us-east-1b"
    },
    "AllowAccessFrom": {
      "Description": "The net block (CIDR) that SSH and other protocols access is available to.",
      "Default": "0.0.0.0/0",
      "Type": "String"
    },
    "KeyPair" : {
      "Description" : "The name of an EC2 Key Pair to allow SSH access to the instance.",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "Default" : "simplify_key"
    }
  },
  "Conditions": {
   "LaunchOnDemand" : {"Fn::Equals" : [{"Ref" : "MaxSpotPrice"}, "0"]},
   "LaunchSpot" : { "Fn::Not" : [ { "Fn::Equals" : [{"Ref" : "MaxSpotPrice"}, "0"] } ] }
  },
  "Resources": {
    "SSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SSH SecurityGroup",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "AllowAccessFrom"} },
          {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": {"Ref": "AllowAccessFrom"} },
		      {"IpProtocol": "tcp", "FromPort": "443","ToPort": "443","CidrIp": {"Ref": "AllowAccessFrom"} },
          {"IpProtocol": "tcp", "FromPort": "2812", "ToPort": "2812", "CidrIp": {"Ref": "AllowAccessFrom"} },
          {"IpProtocol": "tcp", "FromPort": "8443", "ToPort": "8443", "CidrIp": {"Ref": "AllowAccessFrom"} },
		  {"IpProtocol": "tcp", "FromPort": "6200", "ToPort": "6200", "CidrIp": "0.0.0.0/0", "Description" : "ES https" },
		  {"IpProtocol": "tcp", "FromPort": "6633", "ToPort": "6633", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "6633", "ToPort": "6633", "CidrIpv6": "::/0" },
		  {"IpProtocol": "tcp", "FromPort": "7406", "ToPort": "7407", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "7406", "ToPort": "7407", "CidrIpv6": "::/0" },
		  {"IpProtocol": "tcp", "FromPort": "7080", "ToPort": "7080", "CidrIp": "0.0.0.0/0", "Description" : "EJBCA" },
		  {"IpProtocol": "tcp", "FromPort": "8000", "ToPort": "8000", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "8000", "ToPort": "8000", "CidrIpv6": "::/0" },
		  {"IpProtocol": "tcp", "FromPort": "8080", "ToPort": "8080", "CidrIp": "0.0.0.0/0" },
      {"IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "0.0.0.0/0", "Description" : "Graylog" },
		  {"IpProtocol": "tcp", "FromPort": "9090", "ToPort": "9090", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "9200", "ToPort": "9200", "CidrIp": "0.0.0.0/0", "Description" : "ES http" },
		  {"IpProtocol": "tcp", "FromPort": "11443", "ToPort": "11443", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "11443", "ToPort": "11443", "CidrIpv6": "::/0" },
		  {"IpProtocol": "tcp", "FromPort": "12443", "ToPort": "12443", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "12443", "ToPort": "12443", "CidrIpv6": "::/0" },
		  {"IpProtocol": "tcp", "FromPort": "39090", "ToPort": "39090", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "tcp", "FromPort": "48179", "ToPort": "48179", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "udp", "FromPort": "123", "ToPort": "123", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "udp", "FromPort": "123", "ToPort": "123", "CidrIpv6": "::/0" },
		  {"IpProtocol": "udp", "FromPort": "4500", "ToPort": "4500", "CidrIp": "0.0.0.0/0" },
		  {"IpProtocol": "udp", "FromPort": "4789", "ToPort": "4789", "CidrIp": "0.0.0.0/0" },
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIpv6": "::/0" },
		  {"IpProtocol": "4", "CidrIpv6": "::/0", "Description" : "IPv6 VXLAN is sent as IPinIP" },
		  {"IpProtocol": "icmp","FromPort": "-1", "ToPort": "-1", "CidrIp": "0.0.0.0/0",
		   "Description" : "NSGs ping proxy during bootstrap" },
		  {"IpProtocol": "icmpv6", "CidrIpv6": "::/0" }
        ]
      }
    },

    "NuageServerAutoScale": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Condition" : "LaunchSpot",
      "Properties": {
        "AvailabilityZones": {"Fn::Split" : [ "," , {"Ref": "AvailabilityZones"} ]},
        "LaunchConfigurationName": {"Ref": "NuageServerLaunchConfig"},
        "MinSize": "1",
        "MaxSize": "1",
        "DesiredCapacity": "1",
        "Tags": [
            {"Key": "Name", "Value": { "Ref" : "AWS::StackName" }, "PropagateAtLaunch": true}
        ]
      }
    },
    "NuageServerLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Condition" : "LaunchSpot",
      "Properties": {
        "SpotPrice" : { "Ref" : "MaxSpotPrice" },
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyPair"},
        "SecurityGroups": [{"Ref": "SSHSecurityGroup"}],
        "BlockDeviceMappings": [ { "DeviceName": "/dev/sda1", "Ebs": { "DeleteOnTermination": true } } ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
         "#!/bin/bash -xe\n",
         "yum update -y\n"
         ]]}
        }
      }
    },
    "OnDemandInstance": {
     "Type" : "AWS::EC2::Instance",
     "Condition" : "LaunchOnDemand",
     "Properties" : {
       "Tags": [
         {"Key": "Name", "Value": { "Ref" : "AWS::StackName" }}
       ],
       "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
       "InstanceType": {"Ref": "InstanceType"},
       "KeyName": {"Ref": "KeyPair"},
       "SecurityGroups": [{"Ref": "SSHSecurityGroup"}],
       "BlockDeviceMappings": [ { "DeviceName": "/dev/sda1", "Ebs": { "DeleteOnTermination": true } } ],
       "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
        "#!/bin/bash -xe\n",
        "yum update -y\n"
        ]]}
       }
     }
    }
  },
  "Outputs" : {
   "InstanceId" : { "Value" : { "Fn::If" : [ "LaunchOnDemand", { "Ref" : "OnDemandInstance" }, "TBA" ] } }
  }
}
